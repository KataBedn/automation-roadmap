{"version":3,"sources":["components/PopupContent/index.js","components/SingleTree/index.js","components/App/index.js","index.js"],"names":["converter","showndown","Converter","PopupContent","data","color","map","popupDetails","Parser","makeHtml","description","Button","animated","size","href","url","target","Content","visible","urlLabel","hidden","Icon","name","SingleTree","Segment","padded","tertiary","inverted","Grid","columns","stackable","Row","stretched","skill","Column","textAlign","Header","Object","keys","relaxed","values","subSkill","Popup","content","on","pinned","trigger","as","compact","fluid","App","icon","Divider","horizontal","roadmapData","beginner","intermediate","expert","ReactDOM","render","document","getElementById"],"mappings":"gRAIMA,EAAY,IAAIC,IAAUC,UAgBjBC,EAfM,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,EAASC,MAAT,OACnB,4BACGD,EAAKE,KAAI,SAACC,GAAD,OACR,8BACE,4BAAIC,YAAOR,EAAUS,SAASF,EAAaG,gBAC3C,eAACC,EAAA,EAAD,CAAQC,UAAQ,EAACC,KAAK,SAASC,KAAMP,EAAaQ,IAAKC,OAAO,SAA9D,UACE,cAACL,EAAA,EAAOM,QAAR,CAAgBC,SAAO,EAAvB,SAAyBX,EAAaY,WACtC,cAACR,EAAA,EAAOM,QAAR,CAAgBG,QAAM,EAAtB,SACE,cAACC,EAAA,EAAD,CAAMC,KAAK,8BCmCRC,EA7CI,SAAC,GAAqB,IAAnBnB,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC1B,OACE,cAACmB,EAAA,EAAD,CAASC,QAAM,EAACC,UAAQ,EAACC,UAAQ,EAACtB,MAAOA,EAAzC,SACE,cAACuB,EAAA,EAAD,CAAMC,QAAQ,QAAQC,WAAS,EAA/B,SACE,cAACF,EAAA,EAAKG,IAAN,CAAUC,WAAS,EAAnB,SACG5B,EAAKE,KAAI,SAAC2B,GAAD,OACR,cAACL,EAAA,EAAKM,OAAN,UACE,eAACV,EAAA,EAAD,CAASC,QAAM,EAACU,UAAU,SAA1B,UACE,cAACC,EAAA,EAAD,CAAQvB,KAAK,SAASR,MAAM,QAA5B,SACGgC,OAAOC,KAAKL,KAEf,uBACA,cAACL,EAAA,EAAD,CAAMW,SAAO,EAACd,QAAM,EAApB,SACGY,OAAOG,OAAOP,GAAO,GAAG3B,KAAI,SAACmC,GAAD,OAC3B,cAACb,EAAA,EAAKG,IAAN,UACE,cAACW,EAAA,EAAD,CACEC,QACE,cAAC,EAAD,CAAcvC,KAAMqC,EAASrC,KAAMC,MAAOA,IAE5CuC,GAAG,QACH/B,KAAK,QACLgC,QAAM,EACNC,QACE,cAACnC,EAAA,EAAD,CACEoC,GAAG,IACHC,SAAO,EACPC,OAAK,EACLpC,KAAK,QACLR,MAAOA,EACPsC,QAASF,EAASnB,+BCR/B4B,EAlBH,WACV,OACE,eAAC1B,EAAA,EAAD,WACE,eAACY,EAAA,EAAD,CAAQW,GAAG,KAAKI,MAAI,EAAChB,UAAU,SAA/B,UACE,cAACd,EAAA,EAAD,CAAMC,KAAK,SADb,wBAKA,cAAC8B,EAAA,EAAD,CAASC,YAAU,EAAnB,sBACA,cAAC,EAAD,CAAYjD,KAAMkD,EAAYC,SAAUlD,MAAM,SAC9C,cAAC+C,EAAA,EAAD,CAASC,YAAU,EAAnB,0BACA,cAAC,EAAD,CAAYjD,KAAMkD,EAAYE,aAAcnD,MAAM,SAClD,cAAC+C,EAAA,EAAD,CAASC,YAAU,EAAnB,oBACA,cAAC,EAAD,CAAYjD,KAAMkD,EAAYG,OAAQpD,MAAM,eCflDqD,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.46b145c2.chunk.js","sourcesContent":["import { Button, Icon } from \"semantic-ui-react\";\nimport showndown from \"showdown\";\nimport Parser from \"html-react-parser\";\n\nconst converter = new showndown.Converter();\nconst PopupContent = ({ data, color }) => (\n  <p>\n    {data.map((popupDetails) => (\n      <p>\n        <p>{Parser(converter.makeHtml(popupDetails.description))}</p>\n        <Button animated size=\"medium\" href={popupDetails.url} target=\"_blank\">\n          <Button.Content visible>{popupDetails.urlLabel}</Button.Content>\n          <Button.Content hidden>\n            <Icon name=\"arrow right\" />\n          </Button.Content>\n        </Button>\n      </p>\n    ))}\n  </p>\n);\nexport default PopupContent;\n","import { Popup, Grid, Segment, Header, Button } from \"semantic-ui-react\";\nimport PopupContent from \"../PopupContent\";\n\nconst SingleTree = ({ data, color }) => {\n  return (\n    <Segment padded tertiary inverted color={color}>\n      <Grid columns=\"equal\" stackable>\n        <Grid.Row stretched>\n          {data.map((skill) => (\n            <Grid.Column>\n              <Segment padded textAlign=\"center\">\n                <Header size=\"medium\" color=\"black\">\n                  {Object.keys(skill)}\n                </Header>\n                <br />\n                <Grid relaxed padded>\n                  {Object.values(skill)[0].map((subSkill) => (\n                    <Grid.Row>\n                      <Popup\n                        content={\n                          <PopupContent data={subSkill.data} color={color} />\n                        }\n                        on=\"click\"\n                        size=\"small\"\n                        pinned\n                        trigger={\n                          <Button\n                            as=\"a\"\n                            compact\n                            fluid\n                            size=\"small\"\n                            color={color}\n                            content={subSkill.name}\n                          />\n                        }\n                      />\n                    </Grid.Row>\n                  ))}\n                </Grid>\n              </Segment>\n            </Grid.Column>\n          ))}\n        </Grid.Row>\n      </Grid>\n    </Segment>\n  );\n};\n\nexport default SingleTree;\n","import React from \"react\";\nimport { Segment, Divider, Header, Icon } from \"semantic-ui-react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport roadmapData from \"../../data/roadmapData.json\";\nimport SingleTree from \"../SingleTree\";\n\nconst App = () => {\n  return (\n    <Segment>\n      <Header as=\"h2\" icon textAlign=\"center\">\n        <Icon name=\"road\" />\n        Automation roadmap\n      </Header>\n\n      <Divider horizontal>Beginner</Divider>\n      <SingleTree data={roadmapData.beginner} color=\"teal\" />\n      <Divider horizontal>Intermediate</Divider>\n      <SingleTree data={roadmapData.intermediate} color=\"blue\" />\n      <Divider horizontal>Expert</Divider>\n      <SingleTree data={roadmapData.expert} color=\"violet\" />\n    </Segment>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}